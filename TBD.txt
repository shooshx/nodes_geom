GUI:
- parameter value change with drag and right button like in houdini
- before running - do type checking
- color picker with null
- BUG: resize the window beyond the size of the nodes panel moves it
- select *nodes* with Ctrl, rectangle (display params of multiple nodes at once?)
- zoom nodes view
- icons nodes view
- node show node name if name is changed
- progress bar for long run, abort button
- first node created with display flag (otherwise nothing is visible)
- fix jumping of splits on page load
- Math.round lines just before drawing to avoid thinning artifacts when zooming?
- save the image-canvas view transform


ENGINE:
- serialization - save only if something is changed
- save to SVG
- !!! download all saves backup
- Animation using frame variable
- ParamSelect - can get value instead of sel_idx (in gradient spread)


NODES:
- frame buffer
    clone object
    merge create and shader
- Geom primitive
    - rect round edges
    - spiral
    - 2d function of t, sampled at intervals
    - free-hand path, min step distance
- manual geom
    - delete point from list control
    - move them even after transform?
    - primitive quad, triangle, path between the points? by selection?
    - curve control points
    - BUG - yellow appears in the second column but isn't updating when changing selection
    - point size
- Divide triangles - for better interpolation
    - unifies vertices?
- polyline fill
    UI for closing and starting a new poly, bugs with this
    triangulation
        edge case of non-input points coming from triangulate (corner points) ??? don't know how to do this
        add non-hole points?
    show arrows with on the lines to show its direction
- SetAttr
    pseudo attribute - face center (position) so that it will be possible to sample face color from the position attribute
    normals?
- SetAttr fill from node 
   - transform fill along with the shape or not
   - fill vertices circles?
- transform invert
- transform - fit one object to another? paper.js fitBounds
- interactive
    mouse input, adjust minimimum step (http://paperjs.org/tutorials/images/color-averaging-image-areas/)
- Group objects
    display checkboxes (accumulate from connections?)
- GLSL node
    https://ace.c9.io/#nav=embedding 
    https://stackoverflow.com/questions/27531860/how-to-highlight-a-certain-line-in-ace-editor
    title of window with different color for fragment and vertex shaders
    tabbed view?
- Image processing  http://evanw.github.io/webgl-filter/
- !!!! Perlin Noise GLSL?
    https://github.com/stegu/webgl-noise/tree/master/src
    https://github.com/shooshx/kawaiigl/blob/0f403512b49187b677865179f3ef5eb18433b68b/NoiseGenerator.cpp
    simplex?
- Load-Image
    menu on the side to load presets?
- point size to path circle
    and lines -- according to changing width
- bitmap trace
    potrace -  https://github.com/kilobtye/potrace/blob/master/potrace.js
        http://potrace.sourceforge.net/  
- delete points outside a shape (crop)
    node for clip using a path
- convex hull
- Copy - copy something onto vertices positions
    how to control parameters of the copies?
    for loop?
- Gradient
    spreadMethod with SVG  https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spreadMethod
        also when sampling get_pixels
    stroke,
- !!!!!!! 2d color function
    - float function - code
    - vec3/4 function? direct color
    - sampling gradient
        - with repeat
           - going to need async pre_run
    - time
    - mouse
- Shader distance from path
- random points  - https://www.sidefx.com/docs/houdini/nodes/sop/scatter.html
    on a surface
    on a line
    interpolate property from input geometry
- Graph (4) coloring - for selecting some vertices at seemingly random
- 3D model and render
- Text paths  https://opentype.js.org/
- Mesh merge, path merge
- Shrink faces 
    - with expression depending on vtx_pos or any other attr
- Shader distance from path
- Flow control 
    - choose one input or another depending on expression
    - For loop?


- animate? modify a property for the next frame
- random color with r,g,b ranges and seed parameter

nodes the produce transform, invert it


PAPER.JS
- create objects without canvas?
- internal represnentation
- smooth, simplify
- offset - https://github.com/luz-alphacode/paperjs-offset

EXPRESSIONS
- boolean comparisons operator ?:
- intellisense
- vec2 normalize - context menu that makes 2 edit boxes into 1 edit box with vec2 expr
    - scale to object space coordinate
- !! in any params view that can have expressions, add a custom user parameter that can be used with a slider
    - and added to the object that carries it
- unify ParamColor and ParamExprColor
- expression in color in table

NODE-VIEW
- better lines the go up
- don't allow connect more than one thing into an input, unless it's a multi-input
- terminal color according to type
- comments, frames, change color of node

DISCOVERABILITY
- hover tooltip on terminals
- detailed explanation about a node when selecting it in a tooltip and in the params

demo idea
- random points with random colors that make a field of polygons, animated to move slightly
- robot hand with transformations
- random points by texture
- stuff for AxiDraw
- function map with color gradient
- function contours like in d3 example
- star field screen saver
- topograph with gradient
- something looking like https://github.com/stolk/allrgb
- rainbow gradient like clock - radial with rays towards infinity (conic gradient) https://codepen.io/thebabydino/pen/pyOadx/
- ascii art
- spiral with width according to color (http://paperjs.org/examples/spiral-raster/)
- http://paperjs.org/examples/
- image effects http://iquilezles.org/www/articles/deform/deform.htm
- plasma https://stuff.brm.sk/plasma/
        float x = gl_FragCoord.x / (uResolution.y * 0.08);
        float y = gl_FragCoord.y / (uResolution.y * 0.08);
        float t = uTime;
        
        float da = distance(vec2(x + cos(t / 1110.0)*4.0,y), vec2(1.0, 2.1));
        float db = distance(vec2(x,y), vec2(8.0 + 16.0*uMouse.x, 6.1 + 8.0*(1.0 - uMouse.y) ));
        float dc = distance(vec2(x,y + cos(t / 998.0)*2.0), vec2(10.0, 3.1));
        
        float c1 = sin(da) + sin(x) * sin(t/1000.0);
        float c2 = sin(db - t / 500.0)*1.0;
        float c3 = cos(dc / 2.0) + sin(t/1000.0);
        float c = (c1 + c2 + c3) / 3.0 - uColorSwitch / 3.0;



nice visualizations: https://bost.ocks.org/mike/algorithms/
d3: https://github.com/d3/d3/wiki/Gallery

nice reference images:
https://society6.com/product/gray-polygon-background_stretched-canvas

VEX random attr video: https://www.youtube.com/watch?v=0qfBj15IoQM