**** Application ****
- Import and export programs to readable YAML
- Display the output of a single selected node marked with the blue display flag
- Display outline of any number of "template" outputs of nodes marked with the template flag

**** Expression Engine ****

- Variable nodes can calculate and distribute values to other nodes


**** Nodes ****

Node: Geom Primitive
- Create a simple geometry Primitive
- Rect, rect with triangles, ellipse (circle), regular polygon, star shape
- Base size and Transform

Node: Manual Geometry
- Create a collection of vertices (Mesh) or closed straight-line paths
- Control color of every vertex
- Input exact coordinates by clicking the coordinate in the table

Node: Gradient
- Create linear, radial and sampler gradient
    - sampler are gradients without geometry used for function sampling see Node Func
- Edit geometry, edit color stop points and colors
- Edit exact position of stop by clicking in the table
- Control gradient spread beyond edges: pad, repeat, reflect
- generate stops using a function of t
    - "return rgb(255,128,0) + rgb(t, t, t)*255"
- Control smoothing and resolution in case it's rendered to a texture
- Load a preset gradient

Node: Divide
- Divide each quad in a quad mesh into smaller quads
- Divide line segments in a path into smaller segment
- by a constant number of division or a constant required distance
- Can set the distance to be exact, in that case the result complete quad might be of different size than the input quad
  - exact distance doesn't work for lines
- Can set different distances for u and v coordinates

Node: Set Attribute
- Set an attribute of vertices or faces of gemortry to a constant, sampled or calculated value
- Set attribute name, type and object to bind to (vertices or faces)
- types: float, vec2 (normal), color (vec4), image-fill, transform
- Sample color value from an image or gradient
- Calculate value according to vertex or face position
- Expression possibilites:
    - Any attribute that already exists the input bound objects (in_obj.vtx_pos.x, in_obj.face_color.r)
    - Index in the attribute we bind to and set value for (in_obj.index)
    - Color from the source input (in_src to get the color vec4, in_src.r for just red)
    - computed attributes: 
        in_obj.face_center: geomtric center of face (vec3)
- special attribute names that can be set:
    - pos (vertex) - vertex position
    - color (vertex and face) - fill color
    - radius (vertex) - of the vertex circle
    - fill (face, with type:image-fill) - makes the input geometry a clipping path for the source
    - transform (vertex and face) - change position/rotation per vertex or per face

Node: Geometry Merge
- Merges one or more geometry objects into one geometry object
- Meshes of the same type result in a mesh of the same type
- Any other combination results in a paths object
- Can deduplicate vertices with a given epsilon accuracy

Node: Geometry Copy

Node: Scatter 
- Create an image with single pixels scattered according to a given function
- Output can be linked to "Pixels to Vertices" node to create geometry
- Expression possibilityes:
    - use "coord" variable to know where you are
    - can use color from input textures/gradient 
- Input a clipping shape to control exactly where points are created
- The output points is a subset of an initial points pattern. This can either be
    - Randomally generated using a given seed and initial count 
    - From input geometry (usually of a some vertices pattern
        - This can optionally be shuffled to get some randomization in the points selection
- Set the resolution of the render to control the granularity and precision

Node: Group Objects

Node: Function Fill